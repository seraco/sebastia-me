{"version":3,"sources":["Text.tsx","Image.tsx","Section.tsx","Social.tsx","Link.tsx","App.tsx","serviceWorker.js","index.js"],"names":["Text","props","className","title","children","Image","src","alt","Section","order","Social","href","target","Link","links","App","state","width","height","updateWindowDimensions","bind","this","window","addEventListener","removeEventListener","setState","innerWidth","innerHeight","Component","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"uPAkBeA,MAXf,SAAcC,GACV,OACI,yBAAKC,UAAU,aACX,yBAAKA,UAAU,gBACVD,EAAME,OAAS,wBAAID,UAAU,SAASD,EAAME,OAC7C,uBAAGD,UAAU,aAAaD,EAAMG,aCGjCC,MARf,SAAeJ,GACX,OACI,yBAAKC,UAAU,QACb,yBAAKA,UAAU,MAAMI,IAAKL,EAAMK,IAAKC,IAAKN,EAAMM,QCY3CC,MATf,SAAiBP,GACb,OACI,yBAAKC,UAAW,YAAcD,EAAMQ,MAAQ,SAAW,YACnD,kBAAC,EAAD,CAAMN,MAAOF,EAAME,OAAQF,EAAMG,UACjC,kBAAC,EAAD,CAAOE,IAAKL,EAAMK,IAAKC,IAAKN,EAAMM,QCE/BG,MAjBf,WACI,OACI,yBAAKR,UAAU,UACX,uBACIS,KAAK,4BACLC,OAAO,UACP,yBAAKV,UAAU,OAAOI,IAAI,gCAE9B,uBACIK,KAAK,iDACLC,OAAO,UACP,yBAAKV,UAAU,OAAOI,IAAI,wBCE3BO,MARf,SAAcZ,GACV,OACI,uBAAGC,UAAU,OAAOS,KAAMV,EAAMU,KAAMC,OAAO,UACxCX,EAAMG,WCEbU,EAAQ,CACZ,OAAU,kBAAC,EAAD,CAAMH,KAAK,qBAAX,UACV,cAAe,kBAAC,EAAD,CAAMA,KAAK,2BAAX,eACf,MAAS,kBAAC,EAAD,CAAMA,KAAK,0BAAX,SACT,OAAU,kBAAC,EAAD,CAAMA,KAAK,0BAAX,WAiDGI,E,kDA3Cb,WAAYd,GAAa,IAAD,8BACtB,cAAMA,IAHRe,WAEwB,EAEtB,EAAKA,MAAQ,CAAEC,MAAO,EAAGC,OAAQ,GACjC,EAAKC,uBAAyB,EAAKA,uBAAuBC,KAA5B,gBAHR,E,gEAOtBC,KAAKF,yBACLG,OAAOC,iBAAiB,SAAUF,KAAKF,0B,6CAIvCG,OAAOE,oBAAoB,SAAUH,KAAKF,0B,+CAI1CE,KAAKI,SAAS,CAAER,MAAOK,OAAOI,WAAYR,OAAQI,OAAOK,gB,+BAI7CN,KAAKL,MAAMC,MAAQI,KAAKL,MAAME,OAE1C,OACE,yBAAKhB,UAAU,OACb,kBAAC,EAAD,CACEO,MAAgC,EAChCN,MAAM,sBACNG,IAAI,UACJC,IAAI,OAJN,mDAME,6BAAM,6BANR,wBAOwBO,EAAK,OAP7B,oBAQMA,EAAK,OARX,QAQ4BA,EAAM,eARlC,oBASOA,EAAK,MATZ,sJAaA,kBAAC,EAAD,W,GAxCUc,aCPEC,QACW,cAA7BP,OAAOQ,SAASC,UAEe,UAA7BT,OAAOQ,SAASC,UAEhBT,OAAOQ,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,iB","file":"static/js/main.07847d29.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\ninterface IProps {\r\n    title?: string;\r\n    children?: any;\r\n}\r\n\r\nfunction Text(props: IProps) {\r\n    return (\r\n        <div className=\"Text flex\">\r\n            <div className=\"text-content\">\r\n                {props.title && <h1 className=\"title\">{props.title}</h1>}\r\n                <p className=\"paragraph\">{props.children}</p>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Text;","import React, { Component } from 'react';\r\n\r\ninterface IProps {\r\n    src: string;\r\n    alt: string;\r\n}\r\n\r\nfunction Image(props: IProps) {\r\n    return (\r\n        <div className=\"flex\">\r\n          <img className=\"img\" src={props.src} alt={props.alt} />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Image;","import React, { Component } from 'react';\r\n\r\nimport Text from './Text';\r\nimport Image from './Image';\r\n\r\nexport interface ISection {\r\n    order: number;\r\n    title?: string;\r\n    src: string;\r\n    alt: string;\r\n    children?: any;\r\n}\r\n\r\nfunction Section(props: ISection) {\r\n    return (\r\n        <div className={\"Section \" + (props.order ? 'direct' : 'reverse')}>\r\n            <Text title={props.title}>{props.children}</Text>\r\n            <Image src={props.src} alt={props.alt}></Image>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Section;","import React, { Component } from 'react';\r\n\r\nfunction Social() {\r\n    return (\r\n        <div className=\"Social\">\r\n            <a \r\n                href=\"https://github.com/seraco\"\r\n                target=\"_blank\">\r\n                <img className=\"logo\" src=\"GitHub-Mark-Light-64px.png\"/>\r\n            </a>\r\n            <a \r\n                href=\"https://www.linkedin.com/in/sebastiaramoncolom\"\r\n                target=\"_blank\">\r\n                <img className=\"logo\" src=\"In-2C-66px-R.png\"/>\r\n            </a>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Social;","import React, { Component } from 'react';\r\n\r\ninterface IProps {\r\n    href: string;\r\n    children?: any;\r\n}\r\n\r\nfunction Link(props: IProps) {\r\n    return (\r\n        <a className=\"Link\" href={props.href} target=\"_blank\">\r\n            {props.children}\r\n        </a>\r\n    );\r\n}\r\n\r\nexport default Link;","import React, { Component } from 'react';\r\n\r\nimport './App.css';\r\nimport Section, { ISection } from './Section';\r\nimport Social from './Social';\r\nimport Link from './Link';\r\n\r\ninterface IState {\r\n  width: number;\r\n  height: number;\r\n}\r\n\r\nconst links = {\r\n  'corrux': <Link href=\"https://corrux.io\">Corrux</Link>,\r\n  'open-cosmos': <Link href=\"https://open-cosmos.com\">Open Cosmos</Link>,\r\n  'react': <Link href=\"https://ca.reactjs.org\">React</Link>,\r\n  'wetipp': <Link href=\"https://www.wetipp.com\">WeTipp</Link>,\r\n};\r\n\r\nclass App extends Component {\r\n  state: IState;\r\n\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = { width: 0, height: 0 };\r\n    this.updateWindowDimensions = this.updateWindowDimensions.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.updateWindowDimensions();\r\n    window.addEventListener('resize', this.updateWindowDimensions);\r\n  }\r\n  \r\n  componentWillUnmount() {\r\n    window.removeEventListener('resize', this.updateWindowDimensions);\r\n  }\r\n\r\n  updateWindowDimensions() {\r\n    this.setState({ width: window.innerWidth, height: window.innerHeight });\r\n  }\r\n\r\n  render() {\r\n    let ratio = this.state.width / this.state.height;\r\n    let orient = ratio > 1 ? 'landscape' : 'portrait';\r\n    return (\r\n      <div className=\"App\">\r\n        <Section\r\n          order={orient === 'landscape' ? 0 : 0}\r\n          title=\"Hey! My name is Seb\"\r\n          src=\"seb.jpg\"\r\n          alt=\"seb\">\r\n          I'm a Software Developer and Aerospace Engineer.\r\n          <br /><br />\r\n          Currently working at {links['corrux']}. Previously,\r\n          at {links['wetipp']} and {links['open-cosmos']}. I maintain\r\n          the {links['react']} website translation into Catalan.\r\n          In my free time, I love climbing, hiking and skiing. If you want\r\n          to find me, I'll probably be in the mountains.\r\n        </Section>\r\n        <Social />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}