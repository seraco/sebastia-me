{"version":3,"sources":["Text.tsx","Image.tsx","Section.tsx","Social.tsx","App.tsx","serviceWorker.js","index.js"],"names":["Text","props","react_default","a","createElement","className","title","text","Image","src","alt","Section","order","src_Text","src_Image","Social","href","target","App","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","sections","width","height","texts","heading","join","intro","studies","coding","work","sport","updateWindowDimensions","bind","assertThisInitialized","window","addEventListener","removeEventListener","setState","innerWidth","innerHeight","orient","sects","map","el","idx","src_Section","key","src_Social","Component","Boolean","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"mgDAkBeA,MAXf,SAAcC,GACV,OACIC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACXH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,SAASJ,EAAMK,OAC7BJ,EAAAC,EAAAC,cAAA,KAAGC,UAAU,aAAaJ,EAAMM,SCGjCC,MARf,SAAeP,GACX,OACIC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,MAAMI,IAAKR,EAAMQ,IAAKC,IAAKT,EAAMS,QCY3CC,MATf,SAAiBV,GACb,OACIC,EAAAC,EAAAC,cAAA,OAAKC,UAAW,YAAcJ,EAAMW,MAAQ,SAAW,YACnDV,EAAAC,EAAAC,cAACS,EAAD,CAAMP,MAAOL,EAAMK,MAAOC,KAAMN,EAAMM,OACtCL,EAAAC,EAAAC,cAACU,EAAD,CAAOL,IAAKR,EAAMQ,IAAKC,IAAKT,EAAMS,QCE/BK,MAjBf,WACI,OACIb,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACXH,EAAAC,EAAAC,cAAA,KACIY,KAAK,4BACLC,OAAO,UACPf,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OAAOI,IAAI,gCAE9BP,EAAAC,EAAAC,cAAA,KACIY,KAAK,iDACLC,OAAO,UACPf,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OAAOI,IAAI,wBCmE3BS,cAhEb,SAAAA,EAAYjB,GAAY,IAAAkB,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAJ,IACtBC,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAF,GAAAO,KAAAH,KAAMrB,KAJRyB,WAGwB,EAAAP,EAFxBQ,cAEwB,EAEtBR,EAAKO,MAAQ,CAAEE,MAAO,EAAGC,OAAQ,GACjCV,EAAKQ,SAAW,CACd,CACEf,MAAO,EACPN,MAAOwB,EAAMC,QAAQC,KAAK,IAC1BzB,KAAMuB,EAAMG,MAAMD,KAAK,IAAM,IAAMF,EAAMI,QAAQF,KAAK,IACtDvB,IAAK,UACLC,IAAK,OAEP,CACEE,MAAO,EACPN,MAAO,GACPC,KAAMuB,EAAMK,OAAOH,KAAK,IACxBvB,IAAK,cACLC,IAAK,YAEP,CACEE,MAAO,EACPN,MAAO,GACPC,KAAMuB,EAAMM,KAAKJ,KAAK,IAAM,IAAMF,EAAMO,MAAML,KAAK,IACnDvB,IAAK,gBACLC,IAAK,aAGTS,EAAKmB,uBAAyBnB,EAAKmB,uBAAuBC,KAA5BnB,OAAAoB,EAAA,EAAApB,QAAAoB,EAAA,EAAApB,CAAAD,KA1BRA,mFA8BtBG,KAAKgB,yBACLG,OAAOC,iBAAiB,SAAUpB,KAAKgB,uEAIvCG,OAAOE,oBAAoB,SAAUrB,KAAKgB,yEAI1ChB,KAAKsB,SAAS,CAAEhB,MAAOa,OAAOI,WAAYhB,OAAQY,OAAOK,+CAIzD,IACIC,EADQzB,KAAKI,MAAME,MAAQN,KAAKI,MAAMG,OACrB,EAAI,YAAc,WACnCmB,EAAQ1B,KAAKK,SAASsB,IAAI,SAACC,EAAIC,GAAL,OAC5BjD,EAAAC,EAAAC,cAACgD,EAAD,CACEC,IAAKH,EAAGzC,IACRG,MAAkB,cAAXmC,EAAyBI,EAAM,EAAI,EAC1C7C,MAAO4C,EAAG5C,MACVC,KAAM2C,EAAG3C,KACTE,IAAKyC,EAAGzC,IACRC,IAAKwC,EAAGxC,QAGZ,OACER,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACZ2C,EACD9C,EAAAC,EAAAC,cAACkD,EAAD,cA9DUC,aCAEC,QACW,cAA7Bf,OAAOgB,SAASC,UAEe,UAA7BjB,OAAOgB,SAASC,UAEhBjB,OAAOgB,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO3D,EAAAC,EAAAC,cAAC0D,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.14196c83.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\ninterface IProps {\n    title: string;\n    text: string;\n}\n\nfunction Text(props: IProps) {\n    return (\n        <div className=\"Text flex\">\n            <div className=\"text-content\">\n                <h1 className=\"title\">{props.title}</h1>\n                <p className=\"paragraph\">{props.text}</p>\n            </div>\n        </div>\n    );\n}\n\nexport default Text;","import React, { Component } from 'react';\n\ninterface IProps {\n    src: string;\n    alt: string;\n}\n\nfunction Image(props: IProps) {\n    return (\n        <div className=\"flex\">\n          <img className=\"img\" src={props.src} alt={props.alt} />\n        </div>\n    );\n}\n\nexport default Image;","import React, { Component } from 'react';\n\nimport Text from './Text';\nimport Image from './Image';\n\nexport interface ISection {\n    order: number;\n    title: string;\n    text: string;\n    src: string;\n    alt: string;\n}\n\nfunction Section(props: ISection) {\n    return (\n        <div className={\"Section \" + (props.order ? 'direct' : 'reverse')}>\n            <Text title={props.title} text={props.text}></Text>\n            <Image src={props.src} alt={props.alt}></Image>\n        </div>\n    );\n}\n\nexport default Section;","import React, { Component } from 'react';\n\nfunction Social() {\n    return (\n        <div className=\"Social\">\n            <a \n                href=\"https://github.com/seraco\"\n                target=\"_blank\">\n                <img className=\"logo\" src=\"GitHub-Mark-Light-64px.png\"/>\n            </a>\n            <a \n                href=\"https://www.linkedin.com/in/sebastiaramoncolom\"\n                target=\"_blank\">\n                <img className=\"logo\" src=\"In-2C-66px-R.png\"/>\n            </a>\n        </div>\n    );\n}\n\nexport default Social;","import React, { Component } from 'react';\n\nimport './App.css';\nimport texts from './text/about.json';\nimport Section, { ISection } from './Section';\nimport Social from './Social';\n\ninterface IState {\n  width: number;\n  height: number;\n}\n\nclass App extends Component {\n  state: IState;\n  sections: Array<ISection>;\n\n  constructor(props: any) {\n    super(props);\n    this.state = { width: 0, height: 0 };\n    this.sections = [\n      {\n        order: 0,\n        title: texts.heading.join(''),\n        text: texts.intro.join('') + ' ' + texts.studies.join(''),\n        src: 'seb.jpg',\n        alt: 'seb'\n      },\n      {\n        order: 0,\n        title: '',\n        text: texts.coding.join(''),\n        src: 'coding.jpeg',\n        alt: 'climbing'\n      },\n      {\n        order: 0,\n        title: '',\n        text: texts.work.join('') + ' ' + texts.sport.join(''),\n        src: 'climbing.jpeg',\n        alt: 'climbing'\n      }\n    ];\n    this.updateWindowDimensions = this.updateWindowDimensions.bind(this);\n  }\n\n  componentDidMount() {\n    this.updateWindowDimensions();\n    window.addEventListener('resize', this.updateWindowDimensions);\n  }\n  \n  componentWillUnmount() {\n    window.removeEventListener('resize', this.updateWindowDimensions);\n  }\n\n  updateWindowDimensions() {\n    this.setState({ width: window.innerWidth, height: window.innerHeight });\n  }\n\n  render() {\n    let ratio = this.state.width / this.state.height;\n    let orient = ratio > 1 ? 'landscape' : 'portrait';\n    let sects = this.sections.map((el, idx) =>\n      <Section\n        key={el.src}\n        order={orient === 'landscape' ? idx % 2 : 0}\n        title={el.title}\n        text={el.text}\n        src={el.src}\n        alt={el.alt}>\n      </Section>\n    );\n    return (\n      <div className=\"App\">\n        {sects}\n        <Social></Social>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}